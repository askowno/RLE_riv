---
title: "Riv_EPL"
format: html
---

Preparation

```{r}
# Add packages: 
library(sf)
library(tidyverse)

# Add data

rivers <-st_read("C:/Users/skownoa/Dropbox/NBAwork/Rivers/NBA2025_rivers/NBA2025_River_20250610.shp") #ensure it uses proj =  wgs84 aea cm 25 -24 -33

```

Clean up input data

```{r}

riv <- rivers %>%
  mutate(leng = as.numeric(st_length(geometry))) %>%
  rename(PES2024 = NBA2025_PE) %>% # fix name of PES 2024
  # clean up non SA type and remove estuaries and foreign segments
  filter(RIVTYPE != "Foreign", PES2018 != "Foreign", PES2024 != "Foreign",
                     PES2018 != "Estuary",  PES2018 != "Estuary") %>%   
  # convert NA in PES 2014 to PES 2018 (assume no difference)
  mutate(PES2014 = ifelse(is.na(PES2014), PES2018, PES2014)) %>%
  # clean up DDef18 by looking forward to 24 then back to 14; then clean up DDef24 by looking back to 18 
  mutate(PES2018 = ifelse(PES2018 == "Data defic" & PES2024 != "Data defic", PES2024, PES2018))%>%
  mutate(PES2018 = ifelse(PES2018 == "Data defic" & PES2014 != "Data defic", PES2014, PES2018))%>%
  mutate(PES2024 = ifelse(PES2024 == "Data defic" & PES2018 != "Data defic", PES2018, PES2024))%>%
  # Drop geometry to work as a plain table
  st_drop_geometry() 
  
## Note these data extend outside of SA and into estuaries - these segements need to be filtered out when doing computations. 

```

Calculate EOO using convex hulls in sf

```{r}
# Initialize a list to store results
options(scipen = 999)
eoo_list <- list()

riv_eoo <- rivers %>%
  mutate(leng = as.numeric(st_length(geometry))) %>%
  rename(PES2024 = NBA2025_PE) %>% # fix name of PES 2024
  mutate(PES2014 = ifelse(is.na(PES2014), "Data defic", PES2014)) %>%
  select(RIVTYPE, PES2024, PES2018, PES2014) %>%
  # clean up non SA type and remove estuaries and foreign segments
  filter(RIVTYPE != "Foreign", PES2018 != "Foreign", PES2024 != "Foreign",
                     PES2018 != "Estuary",  PES2018 != "Estuary") 

# Iterate through unique T_MAPCODE values 
for (rivcode in unique(riv_eoo$RIVTYPE)) {
  subset_data <- riv_eoo %>% filter(RIVTYPE == rivcode)
  if (nrow(subset_data) > 0) {
    convex_hull <- st_convex_hull(st_union(subset_data))
    hull_area <- st_area(convex_hull)
    eoo_list[[rivcode]] <- as.numeric(hull_area)
  }
}

eoo_df <- data.frame(
  RIVTYPE = names(eoo_list),
  AREA_EOO = unlist(eoo_list)
) %>%
  mutate(eoo_km2 = AREA_EOO/1000000) %>%
  select(!AREA_EOO)

write.csv(eoo_df, "outputs/EOO_all.csv")



```

RLE and ETS assessment of river ecosystem types

```{r}
#summarise by River type including segment length per type per condition class - this allows for inclusion of condition in the EPL formula
options(scipen = 999)

riv_type_18 <- riv %>%
    group_by(RIVTYPE, PES2018) %>%
  summarise(leng = sum(as.numeric(leng), na.rm = TRUE)) %>%
  ungroup() %>%
  pivot_wider(names_from = PES2018, values_from = leng, values_fill = list(leng = 0))  %>%
  mutate(tot_leng18 = rowSums(across(c(A, B, C, D, E, F, `Data defic`)))) %>%
  mutate(prcDDef18 = `Data defic`/(A+B+C+D+E+F+`Data defic`))

riv_type_24 <- riv %>%
    group_by(RIVTYPE, PES2024) %>%
  summarise(leng = sum(as.numeric(leng), na.rm = TRUE)) %>%
  ungroup() %>%
  pivot_wider(names_from = PES2024, values_from = leng, values_fill = list(leng = 0))  %>%
  mutate(tot_leng24 = rowSums(across(c(A, B, C, D, E, F, `Data defic`)))) %>%
  mutate(prcDDef24 = `Data defic`/(A+B+C+D+E+F+`Data defic`))

# PES results 24 for booklet narratives
pes24_stats <- riv_type_24 %>%
    bind_rows(summarise(., RIVTYPE = "Total", across(where(is.numeric), ~sum(., na.rm = TRUE)) ) ) %>%
  mutate(prp24_ab = (A+B)/tot_leng24)

  write.csv(pes24_stats, file = "outputs/riv_pes24_per_type.csv")
```

```{r}

# Join the tables above - this makes a single table in which all the required metric can be found to compute EPL and RLE
 
 riv_type_metrics <- riv_type_18 %>%
    rename(A18=A, B18=B, C18=C, D18=D, E18=E, F18=F, DDef18 = `Data defic`) %>%
 # Data Defic excluded (segments with PES treated as sample of PES for type) 
   left_join(riv_type_24, by = "RIVTYPE") %>%
    rename(DDef = `Data defic`) %>%
  left_join(eoo_df, by = "RIVTYPE") %>%
 # Metrics for RLE 
    mutate(prp18_cdef = (C18 + D18 + E18 + F18  )/(tot_leng18-DDef18))   %>%
    mutate(prp18_def = (D18 + E18 + F18 )/(tot_leng18-DDef18)) %>%
    mutate(prp18_ef= (E18 + F18)/(tot_leng18-DDef18)) %>%
    mutate(prp24_cdef = (C + D + E + F )/(tot_leng24-DDef)) %>%
    mutate(prp24_def = (D + E + F )/(tot_leng24-DDef)) %>%
    mutate(prp24_ef = (E + F)/(tot_leng24-DDef)) %>%
 # calculate rate of increase in ef def and cdef between t1 and t2 then project to 2040 (for  D2)    
   mutate(prp40_ef = prp24_ef + ((prp24_ef-prp18_ef)/(2024-2018)*44)) %>% 
   mutate(prp40_def = prp24_def + ((prp24_def-prp18_def)/(2024-2018)*44)) %>% 
   mutate(prp40_cdef = prp24_cdef + ((prp24_cdef-prp18_cdef)/(2024-2018)*44)) %>% 
 # Ongoing decline =  length of poor  river (def) increases from t1 to t2
    mutate(pes_decline1824 = ifelse(prp24_def > prp18_def, "decline1824", "nodecline1824"))  %>%
 # Metrics for SA ETS  
   mutate(prp18_ab = (A18+B18)/tot_leng18) %>%
   mutate(prp18_abc = (A18+B18+C18+DDef18)/tot_leng18) %>%
   mutate(prp24_ab = (A+B)/tot_leng24) %>%
   mutate(prp24_abc = (A+B+C+DDef)/tot_leng24) %>%
# D1 assessment assuming  impacts in last 50 years - using PES as measure of functional decline due to biotic disruption (and environmental degradation) PES EF ~ 90%-100% severity; DEF ~ 70%-100% severity; CDEF ~ 50%-100% severity
    mutate(D1_18 = case_when(    prp18_ef >= 0.8 ~ "CR", 
                                 prp18_ef >= 0.5 | prp18_def >=0.8 ~ "EN",
                                 prp18_ef >= 0.3 | prp18_def >=0.5 | 
                                                   prp18_cdef >= 0.8 ~ "VU", 
                                 TRUE ~ "LC")) %>% 
    mutate(D1_24 = case_when(    prp24_ef >= 0.8 ~ "CR", 
                                 prp24_ef >= 0.5 | prp24_def >=0.8 ~ "EN",
                                 prp24_ef >= 0.3 | prp24_def >=0.5 | 
                                                   prp24_cdef >= 0.8 ~ "VU", 
                                 TRUE ~ "LC")) %>%
    # D3 assessment using PES as measure of functional decline due to biotic disruption (and environmental degradation) PES EF ~ 90%-100% severity; DEF ~ 70%-100% severity; CDEF ~ 50%-100% severity
      mutate(D3_18 = case_when(    prp18_ef >= 0.9 ~ "CR", 
                                 prp18_ef >= 0.7 | prp18_def >=0.9 ~ "EN",
                                 prp18_ef >= 0.5 | prp18_def >=0.7 | 
                                                   prp18_cdef >= 0.9 ~ "VU", 
                                 TRUE ~ "LC")) %>% 
     mutate(D3_24 = case_when(    prp24_ef >= 0.9 ~ "CR", 
                                 prp24_ef >= 0.7 | prp24_def >=0.9 ~ "EN",
                                 prp24_ef >= 0.5 | prp24_def >=0.7 | 
                                                   prp24_cdef >= 0.9 ~ "VU", 
                                 TRUE ~ "LC")) %>%
    # B1aii assessment  using declining PES trend as evidence of ongoing decline (note decline from 2018 to 2024 is used as evidence of ongoing decline for 2018 and 2014 assessments - PES for 2014 is incomplete so this cannot be used in same way as PES18 and PES24)
   mutate(B1_24 = case_when( pes_decline1824 == "decline1824" & eoo_km2  <= 2000 ~ "CR",
                             pes_decline1824 == "decline1824" & eoo_km2  <= 20000 ~ "EN",
                             pes_decline1824 == "decline1824" & eoo_km2  <= 50000 ~ "VU",
                                 TRUE ~ "LC")) %>%
   mutate(B1_18 = B1_24) %>%
 # make all assessments factors to get MAX 
    mutate(across( c(B1_18, B1_24, D1_18, D1_24, D3_18, D3_24), 
                   ~ factor(., levels = c("LC", "VU", "EN", "CR"), ordered = TRUE)  ))  %>%
 # Ensure highest risk cateroy is assiged 
   rowwise() %>%
     mutate(RLE_18 = max(c_across(c(B1_18, D1_18, D3_18)), na.rm = TRUE), 
            RLE_24 = max(c_across(c(B1_24, D1_24, D3_24)), na.rm = TRUE)) %>%
   ungroup() %>%
# Add van Deventer 2018 ETS method: assuming A and B are intact rest is lost but also counting C towards VU (use DDfec as PES C)
    mutate(A3sa_24 = case_when( prp24_ab < 0.2 ~ "CR", 
                                prp24_ab < 0.35 ~ "EN",
                                prp24_abc < 0.6 ~ "VU", 
                                 TRUE ~ "LC")) %>%
    mutate(A3sa_18 = case_when( prp18_ab < 0.2 ~ "CR", 
                                prp18_ab < 0.35 ~ "EN",
                                prp18_abc < 0.6 ~ "VU", 
                                 TRUE ~ "LC")) %>%
     # add in River Zones based on last letter of RIVTYPE
   mutate(zone = case_when(str_ends(RIVTYPE, "U") ~ "Upper foothill",
                           str_ends(RIVTYPE, "L") ~ "Lower foothill", 
                           str_ends(RIVTYPE, "F") ~ "Lowland river", 
                           str_ends(RIVTYPE, "M") ~ "Mountain stream", 
                           TRUE ~  "other")) 
 
   # export a csv of results - Condition and EPL per river type 2018 and 2024
   write.csv(riv_type_metrics, file = "outputs/rle_riv_metrics_per_type.csv")
   
   
```

RLE Summary per slope zone

```{r}
# 2018 summaries IUCN RLE approach 
# make summary counts of RLE categories per River Slopes Zones IUCN approach D3
#riv_type_metrics <- read_csv("outputs/rle_riv_metrics_per_type.csv") 

rle18_sum <- riv_type_metrics %>%
    group_by(RLE_18, zone) %>%
  summarise(count = n(),.groups = 'drop') %>%
  pivot_wider(names_from = RLE_18, 
              values_from = count, values_fill = 0) %>%
   relocate(VU, .after = EN) %>%
   # Add row-wise TOTAL
  rowwise() %>%
  mutate(Total = sum(c_across(where(is.numeric)))) %>%
  ungroup() %>%
  # Add TOTAL row (column-wise sums)
  bind_rows(summarise(., zone = "Total", across(where(is.numeric), sum))) %>%
  # Add EPLindex
  mutate(RLIE = (1-((CR*4)+(EN*3)+(VU*2)+(LC*0))/((CR+EN+VU+LC)*5)))  %>%
    mutate(zone = factor(zone, levels = c("Total", "Lowland river", "Lower foothill"           , "Upper foothill", "Mountain stream"))) %>% ## ggplot plots inverted factors!
   arrange(zone)
 
 # export a csv of results - COUNT of RLE 18 per slope zone
 write.csv(rle18_sum, file = "outputs/rle18_riv_count.csv") 
 
 # 2024 summaries IUCN RLE approach 
# make summary counts of RLE categories per River Slopes Zones IUCN approach D3
  
   # make summary counts of RLE categories per River Slopes Zones using IUCN RLE D3 approach 
 rle24_sum <- riv_type_metrics %>%
    group_by(RLE_24, zone) %>%
  summarise(count = n(),.groups = 'drop') %>%
  pivot_wider(names_from = RLE_24, 
              values_from = count, values_fill = 0) %>%
   relocate(VU, .after = EN) %>%
   # Add row-wise TOTAL
  rowwise() %>%
  mutate(Total = sum(c_across(where(is.numeric)))) %>%
  ungroup() %>%
  # Add TOTAL row (column-wise sums)
  bind_rows(summarise(., zone = "Total", across(where(is.numeric), sum))) %>%
  # Add RLE index
  mutate(RLIE = (1-((CR*4)+(EN*3)+(VU*2)+(LC*0))/((CR+EN+VU+LC)*5)))  %>%
    mutate(zone = factor(zone, levels = c("Total", "Lowland river", "Lower foothill"           , "Upper foothill", "Mountain stream"))) %>% ## ggplot plots inverted factors!
   arrange(zone)
 
 # export a csv of results - COUNT of RLE 24 per slope zone
 write.csv(rle24_sum, file = "outputs/rle24_riv_count.csv") 
 
  # make summary of extent of RLE
 rle24_ext <- riv_type_metrics %>%
    group_by(RLE_24, zone) %>%
  summarise(length = round(sum(tot_leng24)/1000, 0),.groups = 'drop') %>%
  pivot_wider(names_from = RLE_24, 
              values_from = length, values_fill = 0) %>%
    relocate(VU, .after = EN) %>%
   # Add row-wise TOTAL
  rowwise() %>%
  mutate(Total = sum(c_across(where(is.numeric)))) %>%
  ungroup() %>%
  # Add TOTAL row (column-wise sums)
  bind_rows(summarise(., zone = "Total", across(where(is.numeric), sum))) %>%
    mutate(zone = factor(zone, levels = c("Total", "Lowland river", "Lower foothill"           , "Upper foothill", "Mountain stream"))) %>% ## ggplot plots inverted factors!
   arrange(zone)
 
 # export a csv of results - EXTENT (km) of RLE 24 per slope zone
  write.csv(rle24_ext, file = "outputs/rle24_riv_ext.csv")
  
 # Convert extent per epl category to proportion 
  rle24_prpext <- rle24_ext %>%
  filter(zone != "Total") %>%
  mutate(across(c(CR, EN, VU, LC), ~ round(.x / Total, 3))) %>%
  select(zone, CR, EN, VU, LC)
  
  # export a csv of results - PROPORTIONAL EXTENT  (km) of RLE 24 per slope zone
   write.csv(rle24_prpext, file = "outputs/rle24_riv_prp.csv")
   
```

ETS Summary per slope zone

```{r}
# A3 SA methods results 
# COUNTS - summary for 2024 using SA methods 

rle24sa_sum <- riv_type_metrics %>%
    group_by(A3sa_24, zone) %>%
  summarise(count = n(),.groups = 'drop') %>%
  pivot_wider(names_from = A3sa_24, 
              values_from = count, values_fill = 0) %>%
   relocate(VU, .after = EN) %>%
   # Add row-wise TOTAL
  rowwise() %>%
  mutate(Total = sum(c_across(where(is.numeric)))) %>%
  ungroup() %>%
  # Add TOTAL row (column-wise sums)
  bind_rows(summarise(., zone = "Total", across(where(is.numeric), sum))) %>%
  # Add RLE index
  mutate(RLIE = (1-((CR*4)+(EN*3)+(VU*2)+(LC*0))/((CR+EN+VU+LC)*5)))  %>%
    mutate(zone = factor(zone, levels = c("Total", "Lowland river", "Lower foothill"           , "Upper foothill", "Mountain stream"))) %>% ## ggplot plots inverted factors!
   arrange(zone)

  # export a csv of results - PROPORTIONAL EXTENT  (km) of SA RLE 24 per slope zone
   write.csv(rle24sa_sum, file = "outputs/rle24sa_riv_count.csv")

# COUNTS - summary for 2018 using SA methods 
   
rle18sa_sum <- riv_type_metrics %>%
    group_by(A3sa_18, zone) %>%
  summarise(count = n(),.groups = 'drop') %>%
  pivot_wider(names_from = A3sa_18, 
              values_from = count, values_fill = 0) %>%
   relocate(VU, .after = EN) %>%
   # Add row-wise TOTAL
  rowwise() %>%
  mutate(Total = sum(c_across(where(is.numeric)))) %>%
  ungroup() %>%
  # Add TOTAL row (column-wise sums)
  bind_rows(summarise(., zone = "Total", across(where(is.numeric), sum))) %>%
  # Add RLE index
  mutate(RLIE = (1-((CR*4)+(EN*3)+(VU*2)+(LC*0))/((CR+EN+VU+LC)*5)))  %>%
    mutate(zone = factor(zone, levels = c("Total", "Lowland river", "Lower foothill"           , "Upper foothill", "Mountain stream"))) %>% ## ggplot plots inverted factors!
   arrange(zone)

# export a csv of results - PROPORTIONAL EXTENT  (km) of RLE 24 per slope zone
   write.csv(rle18sa_sum, file = "outputs/rle18sa_riv_count.csv")
   
#EXENTS - summary for 2024  using SA methods 
  
 rle24sa_ext <- riv_type_metrics %>%
    group_by(A3sa_24, zone) %>%
  summarise(length = round(sum(tot_leng24)/1000, 0),.groups = 'drop') %>%
  pivot_wider(names_from = A3sa_24, 
              values_from = length, values_fill = 0) %>%
    relocate(VU, .after = EN) %>%
   # Add row-wise TOTAL
  rowwise() %>%
  mutate(Total = sum(c_across(where(is.numeric)))) %>%
  ungroup() %>%
  # Add TOTAL row (column-wise sums)
  bind_rows(summarise(., zone = "Total", across(where(is.numeric), sum))) %>%
    mutate(zone = factor(zone, levels = c("Total", "Lowland river", "Lower foothill"           , "Upper foothill", "Mountain stream"))) %>% ## ggplot plots inverted factors!
   arrange(zone)
 
 # export a csv of results - EXTENT (km) of RLE 24 per slope zone
  write.csv(rle24sa_ext, file = "outputs/rle24sa_riv_ext.csv")
  
 # Convert extent per epl category to proportion 
  rle24sa_prpext <- rle24sa_ext %>%
  filter(zone != "Total") %>%
  mutate(across(c(CR, EN, VU, LC), ~ round(.x / Total, 3))) %>%
  select(zone, CR, EN, VU, LC)
  
  # export a csv of results - PROPORTIONAL EXTENT  (km) of RLE 24 per slope zone
   write.csv(rle24sa_prpext, file = "outputs/rle24sa_riv_prp.csv") 
   
   #EXENTS - summary for 2018  using SA methods 
  
 rle18sa_ext <- riv_type_metrics %>%
    group_by(A3sa_18, zone) %>%
  summarise(length = round(sum(tot_leng18)/1000, 0),.groups = 'drop') %>%
  pivot_wider(names_from = A3sa_18, 
              values_from = length, values_fill = 0) %>%
    relocate(VU, .after = EN) %>%
   # Add row-wise TOTAL
  rowwise() %>%
  mutate(Total = sum(c_across(where(is.numeric)))) %>%
  ungroup() %>%
  # Add TOTAL row (column-wise sums)
  bind_rows(summarise(., zone = "Total", across(where(is.numeric), sum))) %>%
    mutate(zone = factor(zone, levels = c("Total", "Lowland river", "Lower foothill"           , "Upper foothill", "Mountain stream"))) %>% ## ggplot plots inverted factors!
   arrange(zone)
 
 # export a csv of results - EXTENT (km) of RLE 24 per slope zone
  write.csv(rle18sa_ext, file = "outputs/rle18sa_riv_ext.csv")
  
 # Convert extent per epl category to proportion 
  rle18sa_prpext <- rle18sa_ext %>%
  filter(zone != "Total") %>%
  mutate(across(c(CR, EN, VU, LC), ~ round(.x / Total, 3))) %>%
  select(zone, CR, EN, VU, LC)
  
  # export a csv of results - PROPORTIONAL EXTENT  (km) of RLE 24 per slope zone
   write.csv(rle18sa_prpext, file = "outputs/rle18sa_riv_prp.csv") 
```

#### **Make graphs for NBA**

```{r}
# load nbaR package : first run this in console devtools::install_github("SANBI-NBA/nbaR") 
library(nbaR)
library(extrafont) # this has tools for embedding fonts in vector graphics which 
# is required by the design team of the booklet.
loadfonts(device = "pdf") # this is required as device = cairo_pdf is not compatible with CorelDraw
```

2024 plots using IUCN RLE methods

```{r}

#####  2024  plot  using  IUCN RLE v2 ###############################
pd_rle24_count <- rle24_sum %>%
    rename(`Critically Endangered` = CR, 
           `Endangered` = EN, 
           `Vulnerable` = VU, 
           `Least Concern` = LC ) # %>%
  # select(-...1) # required if importing from CSV
 
rle24_barplot_count <- nba_plot(pd_rle24_count,
                  `zone`,
                  2:5,
                 CHRT = "bar",
                 NUM = TRUE,
                 LAB = "Percentage of ecosystem types",
                 SCALE_TEXT = 0.6,
                SAVE = NULL)

# adjust legend position
rle24_barplot_count <- rle24_barplot_count +
  theme(
    legend.position = "bottom",             # keep it at the bottom
    legend.margin = margin(l = -45, r = -5, t = -5, b = -5)) 

#export the 2024 plot of counts 
ggsave(
  filename = "outputs/rle24_riv_barplot_count.jpeg", # File name
  plot = rle24_barplot_count,                  # Plot object
  device = "jpeg",                        # File format
  width = 9, height = 7, units = "cm",   # Dimensions
  dpi = 300                               # Resolution
)

###### 2024  plots of extent using   IUCN RLE v2   #########################################
pd_rle24_ext <- rle24_ext %>%
     rename(`Critically Endangered` = CR,
           `Endangered` = EN,
           `Vulnerable` = VU,
           `Least Concern` = LC ) # %>%
  # select(-...1) # required if importing from CSV

rle24_barplot_ext <- nba_plot(pd_rle24_ext,
                  `zone`,
                  2:5,
                 CHRT = "bar",
                 NUM = FALSE,
                 LAB = "Percentage of ecosystem extent (km)",
                 SCALE_TEXT = 0.6,
                 SAVE = NULL)

# adjust legend position
rle24_barplot_ext <- rle24_barplot_ext +
  theme(
    legend.position = "bottom",             # keep it at the bottom
    legend.margin = margin(l = -45, r = -5, t = -5, b = -5)) 

#export  
ggsave(
  filename = "outputs/rle24_riv_barplot_ext.jpeg", # File name
  plot = rle24_barplot_ext,                  # Plot object
  device = "jpeg",                        # File format
  width = 9, height = 7, units = "cm",   # Dimensions
  dpi = 300                               # Resolution
)

```

2024 plots using SA methods

```{r}
##### 2024  plots of counts  using  SA methods ############################
pd_rle24sa_count <- rle24sa_sum %>%
    rename(`Critically Endangered` = CR, 
           `Endangered` = EN, 
           `Vulnerable` = VU, 
           `Least Concern` = LC ) # %>%
  # select(-...1) # required if importing from CSV
 
rle24sa_barplot_count <- nba_plot(pd_rle24sa_count,
                  `zone`,
                  2:5,
                 CHRT = "bar",
                 NUM = TRUE,
                 LAB = "Percentage of ecosystem types",
                 SCALE_TEXT = 0.6,
                SAVE = NULL)

# adjust legend position
rle24sa_barplot_count <- rle24sa_barplot_count +
  theme(
    legend.position = "bottom",             # keep it at the bottom
    legend.margin = margin(l = -45, r = -5, t = -5, b = -5)) 

#export the 2024 plot of counts 
ggsave(
  filename = "outputs/rle24sa_riv_barplot_count.jpeg", # File name
  plot = rle24sa_barplot_count,                  # Plot object
  device = "jpeg",                        # File format
  width = 9, height = 7, units = "cm",   # Dimensions
  dpi = 300                               # Resolution
)

###### 2024  plots of extent using   SA Methods   #########################################
pd_rle24sa_ext <- rle24sa_ext %>%
     rename(`Critically Endangered` = CR,
           `Endangered` = EN,
           `Vulnerable` = VU,
           `Least Concern` = LC ) # %>%
  # select(-...1) # required if importing from CSV

rle24sa_barplot_ext <- nba_plot(pd_rle24sa_ext,
                  `zone`,
                  2:5,
                 CHRT = "bar",
                 NUM = FALSE,
                 LAB = "Percentage of ecosystem extent (km)",
                 SCALE_TEXT = 0.6,
                 SAVE = NULL)

# adjust legend position
rle24sa_barplot_ext <- rle24sa_barplot_ext +
  theme(
    legend.position = "bottom",             # keep it at the bottom
    legend.margin = margin(l = -45, r = -5, t = -5, b = -5)) 

#export  
ggsave(
  filename = "outputs/rle24sa_riv_barplot_ext.jpeg", # File name
  plot = rle24sa_barplot_ext,                  # Plot object
  device = "jpeg",                        # File format
  width = 9, height = 7, units = "cm",   # Dimensions
  dpi = 300                               # Resolution
)
```

2018 plots for RLE and SA methods count only

```{r}
### 2018  plot of count using IUCN RLE v2 ##################
pd_rle18_count <- rle18_sum %>%
    rename(`Critically Endangered` = CR, 
           `Endangered` = EN, 
           `Vulnerable` = VU, 
           `Least Concern` = LC ) # %>%
  # select(-...1) # required if importing from CSV
 
rle18_barplot_count <- nba_plot(pd_rle18_count,
                  `zone`,
                  2:5,
                 CHRT = "bar",
                 NUM = TRUE,
                 LAB = "Percentage of ecosystem types",
                 SCALE_TEXT = 0.6,
                 SAVE = NULL)

# adjust legend position
rle18_barplot_count <- rle18_barplot_count +
  theme(
    legend.position = "bottom",             # keep it at the bottom
    legend.margin = margin(l = -45, r = -5, t = -5, b = -5)) 

#export  
ggsave(
  filename = "outputs/rle18_riv_barplot_count.jpeg", # File name
  plot = rle18_barplot_count,                  # Plot object
  device = "jpeg",                        # File format
  width = 9, height = 7, units = "cm",   # Dimensions
  dpi = 300                               # Resolution
)


####  2018  plot of count using SA methods ####################################
pd_rle18sa_count <- rle18sa_sum %>%
    rename(`Critically Endangered` = CR, 
           `Endangered` = EN, 
           `Vulnerable` = VU, 
           `Least Concern` = LC ) # %>%
  # select(-...1) # required if importing from CSV
 
rle18sa_barplot_count <- nba_plot(pd_rle18sa_count,
                  `zone`,
                  2:5,
                 CHRT = "bar",
                 NUM = TRUE,
                 LAB = "Percentage of ecosystem types",
                 SCALE_TEXT = 0.6,
                 SAVE = NULL)

# adjust legend position
rle18sa_barplot_count <- rle18sa_barplot_count +
  theme(
    legend.position = "bottom",             # keep it at the bottom
    legend.margin = margin(l = -45, r = -5, t = -5, b = -5)) 

#export the 2018sa plot of counts 
ggsave(
  filename = "outputs/rle18sa_riv_barplot_count.jpeg", # File name
  plot = rle18sa_barplot_count,                  # Plot object
  device = "jpeg",                        # File format
  width = 9, height = 7, units = "cm",   # Dimensions
  dpi = 300                               # Resolution
)

```

Plot of Red List Index of Ecosystems for 2018 and 2014 using RLE

```{r}
## RLIE plot 2018-2014 using RLE ################################

RLIE <- rle24_sum %>%
  select(zone, RLIE) %>% 
  rename(RLIE24 = RLIE) %>%
   left_join(rle18_sum, by ="zone") %>%
   rename(RLIE18 = RLIE) %>%
   rename(Zone = zone) %>%
  select(Zone,RLIE18, RLIE24) %>%
  pivot_longer(cols = c(2,3), names_to = "Year", values_to = "RLIE") %>%
    mutate(Year = case_when(
    Year == "RLIE18" ~ "2018",
    Year == "RLIE24" ~ "2024",
    TRUE ~ Year
  ))

rlie_plot <- ggplot(RLIE, aes(x = Year, y = RLIE, group = Zone)) +
  geom_line(aes(linetype = Zone, color = Zone), linewidth = 1.2) +
  geom_point(aes(color = Zone), size = 2) +
  theme_minimal() +
  labs(x = "Year", y = "RLIE") +
  scale_x_discrete(limits = c("2018", "2024"), expand = c(0, 0)) +
  scale_color_manual(values = c(
    "Total" = "black",
    "Lowland river" = "blue",
    "Lower foothill" = "darkgreen",
    "Upper foothill" = "brown",
    "Mountain stream" = "orange"
  )) +
  coord_cartesian(ylim = c(0.3, 0.9)) +
    guides(color = guide_legend(reverse = TRUE),
         linetype = guide_legend(reverse = TRUE)) +
  theme(legend.title = element_blank())
 
  
  #export the graph
ggsave(
  filename = "outputs/rlie_plot.png", # File name
  plot = rlie_plot,                   # Plot object
  device = "png",                        # File format
  width = 9, height = 7, units = "cm"   # Dimensions
)

```

RLIe using SA methods

```{r}
## RLIE plot 2018-2014 using SA methods  ################################

RLIEsa <- rle24sa_sum %>%
  select(zone, RLIE) %>% 
  rename(RLIE24 = RLIE) %>%
   left_join(rle18sa_sum, by ="zone") %>%
   rename(RLIE18 = RLIE) %>%
   rename(Zone = zone) %>%
  select(Zone,RLIE18, RLIE24) %>%
  pivot_longer(cols = c(2,3), names_to = "Year", values_to = "RLIE") %>%
    mutate(Year = case_when(
    Year == "RLIE18" ~ "2018",
    Year == "RLIE24" ~ "2024",
    TRUE ~ Year
  ))

rliesa_plot <- ggplot(RLIEsa, aes(x = Year, y = RLIE, group = Zone)) +
  geom_line(aes(linetype = Zone, color = Zone), linewidth = 1.2) +
  geom_point(aes(color = Zone), size = 2) +
  theme_minimal() +
  labs(x = "Year", y = "RLIE") +
  scale_x_discrete(limits = c("2018", "2024"), expand = c(0, 0)) +
  scale_color_manual(values = c(
    "Total" = "black",
    "Lowland river" = "blue",
    "Lower foothill" = "darkgreen",
    "Upper foothill" = "brown",
    "Mountain stream" = "orange"
  )) +
  coord_cartesian(ylim = c(0.3, 0.9)) +
    guides(color = guide_legend(reverse = TRUE),
         linetype = guide_legend(reverse = TRUE)) +
  theme(legend.title = element_blank())
 
  
  #export the graph
ggsave(
  filename = "outputs/rliesa_plot.png", # File name
  plot = rliesa_plot,                   # Plot object
  device = "png",                        # File format
  width = 9, height = 7, units = "cm"   # Dimensions
)

```
